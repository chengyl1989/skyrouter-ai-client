# 生产环境 Docker Compose 配置
version: '3.8'

services:
  chatbot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - NEXT_TELEMETRY_DISABLED=1
    container_name: skyrouter-ai-chatbot
    ports:
      - "${CHATBOT_PORT:-80}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      - HOSTNAME=0.0.0.0
    restart: unless-stopped
    networks:
      - chatbot-network
    volumes:
      # 持久化数据
      - chatbot-data:/app/data
      # 日志目录
      - ./logs:/app/logs:rw
      # 配置文件（如果有）
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      # 重启策略
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    # 安全配置
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    # 标签
    labels:
      - "com.skyrouter.service=chatbot"
      - "com.skyrouter.version=1.0"
      - "com.skyrouter.description=SkyRouter AI Chatbot Production"
      - "com.skyrouter.environment=production"

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: skyrouter-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx:rw
    depends_on:
      - chatbot
    networks:
      - chatbot-network
    restart: unless-stopped
    profiles:
      - with-nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 监控服务 (可选)
  monitoring:
    image: prom/node-exporter:latest
    container_name: skyrouter-monitoring
    ports:
      - "${MONITORING_PORT:-9100}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - chatbot-network
    restart: unless-stopped
    profiles:
      - with-monitoring

networks:
  chatbot-network:
    driver: bridge
    name: skyrouter-chatbot-network
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  chatbot-data:
    driver: local
    name: skyrouter-chatbot-data
    labels:
      - "com.skyrouter.service=chatbot"
      - "com.skyrouter.type=data"